---
# Task installs postgresql

- name: "HOSTINFO_SERVER | Install postgresql..."
  yum:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - postgresql
    - postgresql-server
    - postgresql-devel
    - python-psycopg2


#- name: "HOSTINFO_SERVER | Initialising postgresql"
#  command: service postgresql initdb
#    creates: /var/lib/pgsql/data/postgresql.conf


- name: "HOSTINFO_SERVER | Starting postgresql"
  service:
    name: "postgresql"
    enabled: yes
    state: started


#- name: "HOSTINFO_SERVER | Ensure PostgreSQL is listening on all localhost"
#  lineinfile: dest=/var/lib/pgsql/data/postgresql.conf
#    regexp: "^#?listen_addresses\s*="
#    line: "listen_addresses = '*'"
#    state: present
#  notify: restart postgresql


#- name: "HOSTINFO_SERVER | ensure we can auth locally"
#  lineinfile:
#    dest: "/var/lib/pgsql/data/pg_hba.conf"
#    regexp: "host\s+all\s+all\s+0.0.0.0/0\s+md5"
#    line: "host all all 0.0.0.0/0 md5"
#    insertbefore: BOF
#  notify: restart postgresql

- name: "HOSTINFO_SERVER | Configure postgresql.conf"
  become_user: postgres
  template:
    src: "postgresql.conf.j2"
    dest: "/var/lib/pgsql/data/postgresql.conf"
  notify: restart postgresql


- name: "HOSTINFO_SERVER | Configure pg_hba.conf"
  become_user: postgres
  template:
    src: "pg_hba.conf.j2"
    dest: "/var/lib/pgsql/data/pg_hba.conf"
  notify: restart postgresql


- name: "HOSTINFO_SERVER | Create db"
  become_user: postgres
  postgresql_db:
    name: "hostinfo"


- name: "HOSTINFO_SERVER | Create db user"
  become_user: postgres
  postgresql_user:
    name: "hostinfo"
    db: "hostinfo"
    password: "hostinfo"
